<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="AnswerQuestionMapper">

	<resultMap id="AnswerQuestionResult" type="AnswerQuestion">
		<result property="id" column="id" />
		<result property="userId" column="user_id"/>
		<result property="type" column="type"/>
		<result property="content" column="content"/>
		<result property="addTime" column="add_time"/>
		<result property="parentId" column="parent_id"/>
		<result property="sonId" column="son_id"/>
		<result property="status" column="status"/>
		<result property="isReply" column="is_reply"/>
		<result property="email" column="email"/>
		<result property="nickName" column="nickname"/>
		<result property="replyCount" column="reply_count"/>
		<result property="parentName" column="parentName"/>
		<result property="sonName" column="sonName"/>
	</resultMap>

	<sql id="edu_answer_question_columns">
		edu_answer_question.id,
		edu_answer_question.user_id,
		edu_answer_question.type,
		edu_answer_question.content,
		edu_answer_question.add_time,
		edu_answer_question.parent_id,
		edu_answer_question.son_id,
		edu_answer_question.status,
		edu_answer_question.reply_count,
		edu_answer_question.is_reply
	</sql>

	<sql id="edu_answer_question_properties">
		#{id},
		#{userId},
		#{type},
		#{content},
		#{addTime},
		#{parentId},
		#{sonId},
		#{status},
		#{replyCount},
		#{isReply}
	</sql>
	<insert id="createAnswerQuestion" parameterType="AnswerQuestion" keyColumn="id"
		keyProperty="id" useGeneratedKeys="true">
		insert into 
		edu_answer_question(edu_answer_question.id,
		edu_answer_question.user_id,
		edu_answer_question.type,
		edu_answer_question.content,
		edu_answer_question.add_time,
		edu_answer_question.parent_id,
		edu_answer_question.son_id,
		edu_answer_question.status,
		edu_answer_question.reply_count,
		edu_answer_question.is_reply) 
		VALUES(#{id},
		#{userId},
		#{type},
		#{content},
		#{addTime},
		#{parentId},
		#{sonId},
		#{status},#{replyCount},#{isReply})
	</insert>
	<!-- 更新答疑 -->
	<update id="updateAnswerQuestion" parameterType="AnswerQuestion">
		update edu_answer_question set content=#{content} where id=#{id} 
	</update>
	<!-- 更新答疑状态 -->
	<update id="updateAnswerQuestionStatus" parameterType="AnswerQuestion">
		update edu_answer_question set status=#{status} where id=#{id} 
	</update>
	<!-- 回复次数加一 -->
	<update id="updateReplyCount" parameterType="AnswerQuestion">
		update edu_answer_question set reply_count=#{replyCount} where id=#{id} 
	</update>
	<!-- 更新状态为已回复 -->
	<update id="updateIsReply" parameterType="Long">
		update edu_answer_question set is_Reply=1 where id=#{id} 
	</update>
	
	<delete id="deleteAnswerQuestion" parameterType="Long">
		delete from edu_answer_question where edu_answer_question.id=#{value}
	</delete>
	<!-- 查询问答详情 -->
	<select id="queryAnswerById" resultMap="AnswerQuestionResult" parameterType="AnswerQuestion">
		select edu_answer_question.id,
		edu_answer_question.user_id,
		edu_answer_question.type,
		edu_answer_question.content,
		edu_answer_question.add_time,
		edu_answer_question.parent_id,
		edu_answer_question.son_id,
		edu_answer_question.status,
		edu_answer_question.reply_count,
	    user_user.nickname,
	    user_user.email
	    <if test="type=='course'">
	   	 	,edu_course.name as parentName,
	    	edu_course_kpoint.name as sonName
	    </if>
	    <if test="type=='examPaper'">
		    ,exam_exampaper.name as parentName,
		    exam_question.qst_content as sonName
	    </if>
	    from edu_answer_question left join user_user
	    on edu_answer_question.user_id=user_user.id
	    <if test="type=='course'">
		    left join edu_course on edu_course.id=edu_answer_question.parent_id
		    left join edu_course_kpoint on edu_course_kpoint.id=edu_answer_question.son_id
	    </if>
	    <if test="type=='examPaper'">
	    	left join exam_exampaper on exam_exampaper.id=edu_answer_question.parent_id
		    left join exam_question on exam_question.id=edu_answer_question.son_id
	    </if>
	    where edu_answer_question.id=#{id}
	</select>
	<!-- 前台查询我的考试问答 -->
	<select id="queryMyExamAnswerQuestionList" resultMap="AnswerQuestionResult" parameterType="java.util.Map">
		select edu_answer_question.id,
		edu_answer_question.user_id,
		edu_answer_question.type,
		edu_answer_question.content,
		edu_answer_question.add_time,
		edu_answer_question.parent_id,
		edu_answer_question.son_id,
		edu_answer_question.status,
		edu_answer_question.reply_count
		from edu_answer_question
	    where edu_answer_question.status=0
    	and edu_answer_question.type='examPaper'
    	and edu_answer_question.user_id=#{e.value}
        order By edu_answer_question.add_time desc
        <include refid="publicMapper.pageEnd"/>
	</select>
	<select id="queryMyExamAnswerQuestionListCount" resultType="int" parameterType="java.util.Map">
		select count(1)
	    from edu_answer_question where edu_answer_question.status=0
    	and edu_answer_question.type='examPaper'
    	and edu_answer_question.user_id=#{e.value}
	</select> 
	
	<!-- 前台查询我的课程问答 -->
	<select id="queryMyCouAnswerQuestionList" resultMap="AnswerQuestionResult" parameterType="java.util.Map">
		select edu_answer_question.id,
		edu_answer_question.user_id,
		edu_answer_question.type,
		edu_answer_question.content,
		edu_answer_question.add_time,
		edu_answer_question.parent_id,
		edu_answer_question.son_id,
		edu_answer_question.status,
		edu_answer_question.reply_count
		from edu_answer_question
	    where edu_answer_question.status=0
    	and edu_answer_question.type='course'
    	and edu_answer_question.user_id=#{e.value}
        order By edu_answer_question.add_time desc
        <include refid="publicMapper.pageEnd"/>
	</select>
	<select id="queryMyCouAnswerQuestionListCount" resultType="int" parameterType="java.util.Map">
		select count(1)
	    from edu_answer_question where edu_answer_question.status=0
    	and edu_answer_question.type='course'
    	and edu_answer_question.user_id=#{e.value}
	</select> 
	
	<!-- 前台查询问答 -->
	<select id="queryAnswerQuestionList" resultMap="AnswerQuestionResult" parameterType="java.util.Map">
		select edu_answer_question.id,
		edu_answer_question.user_id,
		edu_answer_question.type,
		edu_answer_question.content,
		edu_answer_question.add_time,
		edu_answer_question.parent_id,
		edu_answer_question.son_id,
		edu_answer_question.status,
		edu_answer_question.reply_count,
	    user_user.email
	    from edu_answer_question left join user_user
	    on edu_answer_question.user_id=user_user.id
	    where edu_answer_question.status=0
    	and edu_answer_question.type=#{e.type}
    	and edu_answer_question.son_id=#{e.sonId}
        order By edu_answer_question.add_time desc
     <include refid="publicMapper.pageEnd"/>
	</select>
	<select id="queryAnswerQuestionListCount" resultType="int" parameterType="java.util.Map">
		select count(1)
	    from edu_answer_question left join user_user
	    on edu_answer_question.user_id=user_user.id
	     where edu_answer_question.status=0 and edu_answer_question.type=#{e.type}
    	and edu_answer_question.son_id=#{e.sonId}
	</select> 
	
	<!-- 后台查询答疑 -->	
	<select id="queryAdminCourseAnswerQuestionList" resultMap="AnswerQuestionResult" parameterType="java.util.Map">
		select edu_answer_question.id,
		edu_answer_question.user_id,
		edu_answer_question.type,
		edu_answer_question.content,
		edu_answer_question.add_time,
		edu_answer_question.parent_id,
		edu_answer_question.son_id,
		edu_answer_question.status,
		edu_answer_question.reply_count,
		edu_answer_question.is_reply,
	    user_user.nickname,
	    user_user.email
	    <if test="e.type=='course'">
		    ,edu_course.name as parentName,
		    edu_course_kpoint.name as sonName
	    </if>
	    <if test="e.type=='examPaper'">
		    ,exam_exampaper.name as parentName,
		    exam_question.qst_content as sonName
	    </if>
	    from edu_answer_question left join user_user
	    on edu_answer_question.user_id=user_user.id
	    <if test="e.type=='course'">
		    left join edu_course on edu_course.id=edu_answer_question.parent_id
		    left join edu_course_kpoint on edu_course_kpoint.id=edu_answer_question.son_id
		    left join edu_course_subject on edu_course_subject.course_id=edu_course.id
	    </if>
	   <if test="e.type=='examPaper'">
	    	left join exam_exampaper on exam_exampaper.id=edu_answer_question.parent_id
		    left join exam_question on exam_question.id=edu_answer_question.son_id
	    </if>
	    where edu_answer_question.type=#{e.type}
	    	<if test="e.email!=null and e.email!=''">
	    		and user_user.email=#{e.email}
	    	</if>
	    	<if test="e.beginTime!=null and e.beginTime!='' ">
       			and<![CDATA[ edu_answer_question.add_time >=]]>CONCAT(#{e.beginTime},'00:00:00')
	       	</if>
	       	<if test="e.endTime!=null and e.endTime!='' ">
	       		and<![CDATA[ edu_answer_question.add_time <=]]>CONCAT(#{e.endTime},'23:59:59')
	       	</if>
	       	<if test="e.status!=-1">
	       		and edu_answer_question.status=#{e.status}
	       	</if>
	       	<if test="e.isReply!=-1">
	       		and edu_answer_question.is_reply=#{e.isReply}
	       	</if>
	       	<if test="e.subjectId!=null and e.subjectId!='' and e.subjectId!=0">
	       		 <if test="e.type=='course'">
	       		 and edu_course_subject.subject_id=#{e.subjectId}
	       		 </if>
	       		 <if test="e.type=='examPaper'">
	       		 and exam_question.subject_id=#{e.subjectId}
	       		 </if>
	       	</if>
	     order By edu_answer_question.add_time desc
	     <include refid="publicMapper.pageEnd"/>
	</select>
	<select id="queryAdminCourseAnswerQuestionListCount" resultType="int" parameterType="java.util.Map">
		select count(1)
	    from edu_answer_question left join user_user
	    on edu_answer_question.user_id=user_user.id
	    <if test="e.type=='course'">
		    left join edu_course on edu_course.id=edu_answer_question.parent_id
		    left join edu_course_kpoint on edu_course_kpoint.id=edu_answer_question.son_id
		    left join edu_course_subject on edu_course_subject.course_id=edu_course.id
	    </if>
	   <if test="e.type=='examPaper'">
	    	left join exam_exampaper on exam_exampaper.id=edu_answer_question.parent_id
		    left join exam_question on exam_question.id=edu_answer_question.son_id
	    </if>
	    where edu_answer_question.type=#{e.type}
    	<if test="e.email!=null and e.email!=''">
    		and user_user.email=#{e.email}
    	</if>
    	<if test="e.beginTime!=null and e.beginTime!='' ">
       		and<![CDATA[ edu_answer_question.add_time >=]]>CONCAT(#{e.beginTime},'00:00:00')
       	</if>
       	<if test="e.endTime!=null and e.endTime!='' ">
       		and<![CDATA[ edu_answer_question.add_time <=]]>CONCAT(#{e.endTime},'23:59:59')
       	</if>
       	<if test="e.status!=-1">
       		and edu_answer_question.status=#{e.status}
       	</if>
       	<if test="e.isReply!=-1">
       		and edu_answer_question.is_reply=#{e.isReply}
       	</if>
       	<if test="e.subjectId!=null and e.subjectId!='' and e.subjectId!=0">
       		 <if test="e.type=='course'">
       		 	and edu_course_subject.subject_id=#{e.subjectId}
       		 </if>
       		 <if test="e.type=='examPaper'">
       		  and exam_question.subject_id=#{e.subjectId}
       		 </if>
       	</if>
	</select>
 </mapper>