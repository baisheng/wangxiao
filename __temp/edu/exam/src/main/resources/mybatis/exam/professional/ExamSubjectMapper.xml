<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ExamSubjectMapper" >

    <resultMap id="ExamSubjectResult" type="ExamSubject">
       <result property="subjectId" column="SUBJECT_ID" />
       <result property="subjectName" column="SUBJECT_NAME" />
       <result property="status" column="STATUS" />
       <result property="createTime" column="CREATE_TIME" />
       <result property="updateTime" column="UPDATE_TIME" />
       <result property="sort" column="SORT" />
       <result property="professionalId" column="PROFESSIONAL_ID" />
    </resultMap>
    <sql id="exam_subject_columns">
        exam_subject.SUBJECT_ID,
        exam_subject.SUBJECT_NAME,
        exam_subject.STATUS,
        exam_subject.CREATE_TIME,
        exam_subject.UPDATE_TIME,
        exam_subject.SORT,
        exam_subject.PROFESSIONAL_ID
    </sql>
    <sql id="exam_subject_properties">
	    #{subjectId},
	    #{subjectName},
	    #{status},
	    #{createTime},
	    #{updateTime},
	    #{sort},
	    #{professionalId}
    </sql>
	<insert id="createExamSubject" parameterType="ExamSubject">
		insert into exam_subject 
		(<include refid="exam_subject_columns"/>)
		values
		(<include refid="exam_subject_properties"/>)
	</insert>
	<update id="updateExamSubject" parameterType="ExamSubject">
		update exam_subject
		set
		SUBJECT_NAME = #{subjectName},
		SORT=#{sort}
		where SUBJECT_ID=#{subjectId}
	</update>
	<update id="updateSubjectStatus" parameterType="ExamSubject">
		update exam_subject
		set
		status = #{status}
		where SUBJECT_ID=#{subjectId}
	</update>
	<select id="queryExamProfessionalList" resultMap="ExamSubjectResult">
		select 
		<include refid="exam_subject_columns"/>
		from exam_subject
		order by sort DESC
	</select>
	<select id="querySubjectByProfessionalId" parameterType="Long" resultMap="ExamSubjectResult">
		select 
		<include refid="exam_subject_columns"/>
		from exam_subject
		where PROFESSIONAL_ID=#{value}
		and exam_subject.status=0
		order by sort DESC
	</select>
	<select id="querySubjectAllByProfessionalId" parameterType="Long" resultMap="ExamSubjectResult">
		select 
		<include refid="exam_subject_columns"/>
		from exam_subject
		where PROFESSIONAL_ID=#{value}
		and exam_subject.status!=2
		order by sort DESC
	</select>
	<select id="getExamSubjectById" parameterType="Long" resultMap="ExamSubjectResult">
		select 
		<include refid="exam_subject_columns"/>
		from exam_subject
		where SUBJECT_ID = #{value}
	</select>
	<select id="getSubjectList" parameterType="QuerySubject" resultMap="ExamSubjectResult">
		select
		<include refid="exam_subject_columns"/>
		from exam_subject
		<where>
			<if test="professionalId!=null and professionalId>0">
				PROFESSIONAL_ID = #{professionalId}
			</if>
		</where>
	</select>
	<select id="getSubjectListByProfessionalId" parameterType="QuerySubject" resultMap="ExamSubjectResult">
		select
		<include refid="exam_subject_columns"/>
		from exam_subject
		<where>
			<if test="professionalId!=null and professionalId>0">
				PROFESSIONAL_ID = #{professionalId}
			</if>
		</where>
	</select>
	<select id="getSubjectListAll" parameterType="QuerySubject" resultMap="ExamSubjectResult">
		select
		<include refid="exam_subject_columns"/>
		from exam_subject
	</select>
	<select id="getSubjectBySubjectId" parameterType="ExamSubject" resultMap="ExamSubjectResult">
		select
		<include refid="exam_subject_columns"/>
		from exam_subject
		where subject_id=#{subjectId}
	</select>
</mapper>